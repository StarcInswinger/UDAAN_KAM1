name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Build and tag Docker image
        run: |
          docker build -t my-kam-app:${{ github.sha }} .
          docker tag my-kam-app:${{ github.sha }} my-kam-app:latest

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-artifact
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          echo "${{ secrets.AWS_PRIVATE_KEY }}" | base64 -d > key.pem
          chmod 600 key.pem
          ls -la key.pem

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ubuntu
          key_path: key.pem
          script: |
            if [ ! -d "UDAAN_KAM1" ]; then
              rm -rf *
              git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PAT }}@github.com/${{ github.repository }}
              cd UDAAN_KAM1/
            else
              cd UDAAN_KAM1/
              git pull origin main
            fi

            if [ ! -f "docker-compose.yaml" ]; then
              echo "Error: docker-compose.yaml not found!"
              exit 1
            fi
            
            ./mvnw clean package -DskipTests

            docker-compose down || true
            docker-compose pull
            docker-compose up -d
            
            curl -sSL https://github.com/vishnubob/wait-for-it/raw/master/wait-for-it.sh -o wait-for-it.sh
            chmod +x wait-for-it.sh
            ./wait-for-it.sh db:5432 --timeout=60 --strict -- echo "Database is ready"
          
            docker-compose ps
            docker-compose logs -f
